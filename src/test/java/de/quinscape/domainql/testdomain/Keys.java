/*
 * This file is generated by jOOQ.
 */
package de.quinscape.domainql.testdomain;


import de.quinscape.domainql.testdomain.tables.Bar;
import de.quinscape.domainql.testdomain.tables.BarOrg;
import de.quinscape.domainql.testdomain.tables.BarOwner;
import de.quinscape.domainql.testdomain.tables.Foo;
import de.quinscape.domainql.testdomain.tables.SourceEight;
import de.quinscape.domainql.testdomain.tables.SourceFive;
import de.quinscape.domainql.testdomain.tables.SourceFour;
import de.quinscape.domainql.testdomain.tables.SourceNine;
import de.quinscape.domainql.testdomain.tables.SourceOne;
import de.quinscape.domainql.testdomain.tables.SourceSeven;
import de.quinscape.domainql.testdomain.tables.SourceSix;
import de.quinscape.domainql.testdomain.tables.SourceThree;
import de.quinscape.domainql.testdomain.tables.SourceTwo;
import de.quinscape.domainql.testdomain.tables.TargetEight;
import de.quinscape.domainql.testdomain.tables.TargetFive;
import de.quinscape.domainql.testdomain.tables.TargetFour;
import de.quinscape.domainql.testdomain.tables.TargetNine;
import de.quinscape.domainql.testdomain.tables.TargetOne;
import de.quinscape.domainql.testdomain.tables.TargetSeven;
import de.quinscape.domainql.testdomain.tables.TargetSix;
import de.quinscape.domainql.testdomain.tables.TargetThree;
import de.quinscape.domainql.testdomain.tables.TargetTwo;
import de.quinscape.domainql.testdomain.tables.records.BarOrgRecord;
import de.quinscape.domainql.testdomain.tables.records.BarOwnerRecord;
import de.quinscape.domainql.testdomain.tables.records.BarRecord;
import de.quinscape.domainql.testdomain.tables.records.FooRecord;
import de.quinscape.domainql.testdomain.tables.records.SourceEightRecord;
import de.quinscape.domainql.testdomain.tables.records.SourceFiveRecord;
import de.quinscape.domainql.testdomain.tables.records.SourceFourRecord;
import de.quinscape.domainql.testdomain.tables.records.SourceNineRecord;
import de.quinscape.domainql.testdomain.tables.records.SourceOneRecord;
import de.quinscape.domainql.testdomain.tables.records.SourceSevenRecord;
import de.quinscape.domainql.testdomain.tables.records.SourceSixRecord;
import de.quinscape.domainql.testdomain.tables.records.SourceThreeRecord;
import de.quinscape.domainql.testdomain.tables.records.SourceTwoRecord;
import de.quinscape.domainql.testdomain.tables.records.TargetEightRecord;
import de.quinscape.domainql.testdomain.tables.records.TargetFiveRecord;
import de.quinscape.domainql.testdomain.tables.records.TargetFourRecord;
import de.quinscape.domainql.testdomain.tables.records.TargetNineRecord;
import de.quinscape.domainql.testdomain.tables.records.TargetOneRecord;
import de.quinscape.domainql.testdomain.tables.records.TargetSevenRecord;
import de.quinscape.domainql.testdomain.tables.records.TargetSixRecord;
import de.quinscape.domainql.testdomain.tables.records.TargetThreeRecord;
import de.quinscape.domainql.testdomain.tables.records.TargetTwoRecord;

import javax.annotation.processing.Generated;

import org.jooq.ForeignKey;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables in
 * public.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.17.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<BarRecord> PK_BAR = Internal.createUniqueKey(Bar.BAR, DSL.name("pk_bar"), new TableField[] { Bar.BAR.ID }, true);
    public static final UniqueKey<BarOrgRecord> PK_BAR_ORG = Internal.createUniqueKey(BarOrg.BAR_ORG, DSL.name("pk_bar_org"), new TableField[] { BarOrg.BAR_ORG.ID }, true);
    public static final UniqueKey<BarOwnerRecord> PK_BAR_OWNER = Internal.createUniqueKey(BarOwner.BAR_OWNER, DSL.name("pk_bar_owner"), new TableField[] { BarOwner.BAR_OWNER.ID }, true);
    public static final UniqueKey<FooRecord> PK_FOO = Internal.createUniqueKey(Foo.FOO, DSL.name("pk_foo"), new TableField[] { Foo.FOO.ID }, true);
    public static final UniqueKey<SourceEightRecord> PK_SOURCE_EIGHT = Internal.createUniqueKey(SourceEight.SOURCE_EIGHT, DSL.name("pk_source_eight"), new TableField[] { SourceEight.SOURCE_EIGHT.ID }, true);
    public static final UniqueKey<SourceFiveRecord> PK_SOURCE_FIVE = Internal.createUniqueKey(SourceFive.SOURCE_FIVE, DSL.name("pk_source_five"), new TableField[] { SourceFive.SOURCE_FIVE.ID }, true);
    public static final UniqueKey<SourceFourRecord> PK_SOURCE_FOUR = Internal.createUniqueKey(SourceFour.SOURCE_FOUR, DSL.name("pk_source_four"), new TableField[] { SourceFour.SOURCE_FOUR.ID }, true);
    public static final UniqueKey<SourceNineRecord> PK_SOURCE_NINE = Internal.createUniqueKey(SourceNine.SOURCE_NINE, DSL.name("pk_source_nine"), new TableField[] { SourceNine.SOURCE_NINE.ID }, true);
    public static final UniqueKey<SourceOneRecord> PK_SOURCE_ONE = Internal.createUniqueKey(SourceOne.SOURCE_ONE, DSL.name("pk_source_one"), new TableField[] { SourceOne.SOURCE_ONE.ID }, true);
    public static final UniqueKey<SourceSevenRecord> PK_SOURCE_SEVEN = Internal.createUniqueKey(SourceSeven.SOURCE_SEVEN, DSL.name("pk_source_seven"), new TableField[] { SourceSeven.SOURCE_SEVEN.ID }, true);
    public static final UniqueKey<SourceSixRecord> PK_SOURCE_SIX = Internal.createUniqueKey(SourceSix.SOURCE_SIX, DSL.name("pk_source_six"), new TableField[] { SourceSix.SOURCE_SIX.ID }, true);
    public static final UniqueKey<SourceThreeRecord> PK_SOURCE_THREE = Internal.createUniqueKey(SourceThree.SOURCE_THREE, DSL.name("pk_source_three"), new TableField[] { SourceThree.SOURCE_THREE.ID }, true);
    public static final UniqueKey<SourceTwoRecord> PK_SOURCE_TWO = Internal.createUniqueKey(SourceTwo.SOURCE_TWO, DSL.name("pk_source_two"), new TableField[] { SourceTwo.SOURCE_TWO.ID }, true);
    public static final UniqueKey<TargetEightRecord> PK_TARGET_EIGHT = Internal.createUniqueKey(TargetEight.TARGET_EIGHT, DSL.name("pk_target_eight"), new TableField[] { TargetEight.TARGET_EIGHT.ID }, true);
    public static final UniqueKey<TargetEightRecord> TARGET_EIGHT_NAME_KEY = Internal.createUniqueKey(TargetEight.TARGET_EIGHT, DSL.name("target_eight_name_key"), new TableField[] { TargetEight.TARGET_EIGHT.NAME, TargetEight.TARGET_EIGHT.NUM }, true);
    public static final UniqueKey<TargetFiveRecord> PK_TARGET_FIVE = Internal.createUniqueKey(TargetFive.TARGET_FIVE, DSL.name("pk_target_five"), new TableField[] { TargetFive.TARGET_FIVE.ID }, true);
    public static final UniqueKey<TargetFourRecord> PK_TARGET_FOUR = Internal.createUniqueKey(TargetFour.TARGET_FOUR, DSL.name("pk_target_four"), new TableField[] { TargetFour.TARGET_FOUR.ID }, true);
    public static final UniqueKey<TargetNineRecord> PK_TARGET_NINE = Internal.createUniqueKey(TargetNine.TARGET_NINE, DSL.name("pk_target_nine"), new TableField[] { TargetNine.TARGET_NINE.ID }, true);
    public static final UniqueKey<TargetOneRecord> PK_TARGET_ONE = Internal.createUniqueKey(TargetOne.TARGET_ONE, DSL.name("pk_target_one"), new TableField[] { TargetOne.TARGET_ONE.ID }, true);
    public static final UniqueKey<TargetSevenRecord> PK_TARGET_SEVEN = Internal.createUniqueKey(TargetSeven.TARGET_SEVEN, DSL.name("pk_target_seven"), new TableField[] { TargetSeven.TARGET_SEVEN.ID }, true);
    public static final UniqueKey<TargetSevenRecord> TARGET_SEVEN_NAME_KEY = Internal.createUniqueKey(TargetSeven.TARGET_SEVEN, DSL.name("target_seven_name_key"), new TableField[] { TargetSeven.TARGET_SEVEN.NAME }, true);
    public static final UniqueKey<TargetSixRecord> PK_TARGET_SIX = Internal.createUniqueKey(TargetSix.TARGET_SIX, DSL.name("pk_target_six"), new TableField[] { TargetSix.TARGET_SIX.ID }, true);
    public static final UniqueKey<TargetThreeRecord> PK_TARGET_THREE = Internal.createUniqueKey(TargetThree.TARGET_THREE, DSL.name("pk_target_three"), new TableField[] { TargetThree.TARGET_THREE.ID }, true);
    public static final UniqueKey<TargetTwoRecord> PK_TARGET_TWO = Internal.createUniqueKey(TargetTwo.TARGET_TWO, DSL.name("pk_target_two"), new TableField[] { TargetTwo.TARGET_TWO.ID }, true);

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<BarRecord, BarOwnerRecord> BAR__FK_BAR_OWNER_ID = Internal.createForeignKey(Bar.BAR, DSL.name("fk_bar_owner_id"), new TableField[] { Bar.BAR.OWNER_ID }, Keys.PK_BAR_OWNER, new TableField[] { BarOwner.BAR_OWNER.ID }, true);
    public static final ForeignKey<BarOwnerRecord, BarOrgRecord> BAR_OWNER__FK_BAR_OWNER_ORG_ID = Internal.createForeignKey(BarOwner.BAR_OWNER, DSL.name("fk_bar_owner_org_id"), new TableField[] { BarOwner.BAR_OWNER.ORG_ID }, Keys.PK_BAR_ORG, new TableField[] { BarOrg.BAR_ORG.ID }, true);
    public static final ForeignKey<SourceEightRecord, TargetEightRecord> SOURCE_EIGHT__FK_SOURCE_EIGHT_TARGET = Internal.createForeignKey(SourceEight.SOURCE_EIGHT, DSL.name("fk_source_eight_target"), new TableField[] { SourceEight.SOURCE_EIGHT.TARGET_NAME, SourceEight.SOURCE_EIGHT.TARGET_NUM }, Keys.TARGET_EIGHT_NAME_KEY, new TableField[] { TargetEight.TARGET_EIGHT.NAME, TargetEight.TARGET_EIGHT.NUM }, true);
    public static final ForeignKey<SourceFiveRecord, TargetFiveRecord> SOURCE_FIVE__FK_SOURCE_FIVE_TARGET_ID = Internal.createForeignKey(SourceFive.SOURCE_FIVE, DSL.name("fk_source_five_target_id"), new TableField[] { SourceFive.SOURCE_FIVE.TARGET_ID }, Keys.PK_TARGET_FIVE, new TableField[] { TargetFive.TARGET_FIVE.ID }, true);
    public static final ForeignKey<SourceFourRecord, TargetFourRecord> SOURCE_FOUR__FK_SOURCE_FOUR_TARGET2_ID = Internal.createForeignKey(SourceFour.SOURCE_FOUR, DSL.name("fk_source_four_target2_id"), new TableField[] { SourceFour.SOURCE_FOUR.TARGET2_ID }, Keys.PK_TARGET_FOUR, new TableField[] { TargetFour.TARGET_FOUR.ID }, true);
    public static final ForeignKey<SourceFourRecord, TargetFourRecord> SOURCE_FOUR__FK_SOURCE_FOUR_TARGET_ID = Internal.createForeignKey(SourceFour.SOURCE_FOUR, DSL.name("fk_source_four_target_id"), new TableField[] { SourceFour.SOURCE_FOUR.TARGET_ID }, Keys.PK_TARGET_FOUR, new TableField[] { TargetFour.TARGET_FOUR.ID }, true);
    public static final ForeignKey<SourceNineRecord, TargetNineRecord> SOURCE_NINE__FK_SOURCE_NINE_TARGET_ID = Internal.createForeignKey(SourceNine.SOURCE_NINE, DSL.name("fk_source_nine_target_id"), new TableField[] { SourceNine.SOURCE_NINE.TARGET_ID }, Keys.PK_TARGET_NINE, new TableField[] { TargetNine.TARGET_NINE.ID }, true);
    public static final ForeignKey<SourceOneRecord, TargetOneRecord> SOURCE_ONE__FK_SOURCE_ONE_TARGET_ID = Internal.createForeignKey(SourceOne.SOURCE_ONE, DSL.name("fk_source_one_target_id"), new TableField[] { SourceOne.SOURCE_ONE.TARGET_ID }, Keys.PK_TARGET_ONE, new TableField[] { TargetOne.TARGET_ONE.ID }, true);
    public static final ForeignKey<SourceSevenRecord, TargetSevenRecord> SOURCE_SEVEN__FK_SOURCE_SEVEN_TARGET = Internal.createForeignKey(SourceSeven.SOURCE_SEVEN, DSL.name("fk_source_seven_target"), new TableField[] { SourceSeven.SOURCE_SEVEN.TARGET }, Keys.TARGET_SEVEN_NAME_KEY, new TableField[] { TargetSeven.TARGET_SEVEN.NAME }, true);
    public static final ForeignKey<SourceSixRecord, TargetSixRecord> SOURCE_SIX__FK_SOURCE_SIX_TARGET_ID = Internal.createForeignKey(SourceSix.SOURCE_SIX, DSL.name("fk_source_six_target_id"), new TableField[] { SourceSix.SOURCE_SIX.TARGET_ID }, Keys.PK_TARGET_SIX, new TableField[] { TargetSix.TARGET_SIX.ID }, true);
    public static final ForeignKey<SourceThreeRecord, TargetThreeRecord> SOURCE_THREE__FK_SOURCE_THREE_TARGET_ID = Internal.createForeignKey(SourceThree.SOURCE_THREE, DSL.name("fk_source_three_target_id"), new TableField[] { SourceThree.SOURCE_THREE.TARGET_ID }, Keys.PK_TARGET_THREE, new TableField[] { TargetThree.TARGET_THREE.ID }, true);
    public static final ForeignKey<SourceTwoRecord, TargetTwoRecord> SOURCE_TWO__FK_SOURCE_TWO_TARGET_ID = Internal.createForeignKey(SourceTwo.SOURCE_TWO, DSL.name("fk_source_two_target_id"), new TableField[] { SourceTwo.SOURCE_TWO.TARGET_ID }, Keys.PK_TARGET_TWO, new TableField[] { TargetTwo.TARGET_TWO.ID }, true);
}
