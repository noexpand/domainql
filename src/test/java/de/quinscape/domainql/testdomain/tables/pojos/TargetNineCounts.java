/*
 * This file is generated by jOOQ.
 */
package de.quinscape.domainql.testdomain.tables.pojos;


import de.quinscape.domainql.jooq.GeneratedDomainObject;

import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.Table;
import jakarta.validation.constraints.Size;

import java.io.Serializable;

import javax.annotation.processing.Generated;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.17.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Entity
@Table(
    name = "target_nine_counts",
    schema = "public"
)
public class TargetNineCounts extends GeneratedDomainObject implements Serializable {

    private static final long serialVersionUID = 1L;

    private String targetId;
    private Long count;

    public TargetNineCounts() {}

    public TargetNineCounts(TargetNineCounts value) {
        this.targetId = value.targetId;
        this.count = value.count;
    }

    public TargetNineCounts(
        String targetId,
        Long count
    ) {
        this.targetId = targetId;
        this.count = count;
    }

    /**
     * Getter for <code>public.target_nine_counts.target_id</code>.
     */
    @Column(name = "target_id", length = 36)
    @Size(max = 36)
    public String getTargetId() {
        return this.targetId;
    }

    /**
     * Setter for <code>public.target_nine_counts.target_id</code>.
     */
    public void setTargetId(String targetId) {
        this.targetId = targetId;
    }

    /**
     * Getter for <code>public.target_nine_counts.count</code>.
     */
    @Column(name = "count")
    public Long getCount() {
        return this.count;
    }

    /**
     * Setter for <code>public.target_nine_counts.count</code>.
     */
    public void setCount(Long count) {
        this.count = count;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final TargetNineCounts other = (TargetNineCounts) obj;
        if (this.targetId == null) {
            if (other.targetId != null)
                return false;
        }
        else if (!this.targetId.equals(other.targetId))
            return false;
        if (this.count == null) {
            if (other.count != null)
                return false;
        }
        else if (!this.count.equals(other.count))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.targetId == null) ? 0 : this.targetId.hashCode());
        result = prime * result + ((this.count == null) ? 0 : this.count.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("TargetNineCounts (");

        sb.append(targetId);
        sb.append(", ").append(count);

        sb.append(")");
        return sb.toString();
    }
}
