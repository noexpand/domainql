/*
 * This file is generated by jOOQ.
*/
package de.quinscape.domainql.testdomain.tables;


import de.quinscape.domainql.testdomain.Public;
import de.quinscape.domainql.testdomain.tables.records.TargetNineCountsRecord;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TargetNineCounts extends TableImpl<TargetNineCountsRecord> {

    private static final long serialVersionUID = -1184140615;

    /**
     * The reference instance of <code>public.target_nine_counts</code>
     */
    public static final TargetNineCounts TARGET_NINE_COUNTS = new TargetNineCounts();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TargetNineCountsRecord> getRecordType() {
        return TargetNineCountsRecord.class;
    }

    /**
     * The column <code>public.target_nine_counts.target_id</code>.
     */
    public final TableField<TargetNineCountsRecord, String> TARGET_ID = createField("target_id", org.jooq.impl.SQLDataType.VARCHAR(36), this, "");

    /**
     * The column <code>public.target_nine_counts.count</code>.
     */
    public final TableField<TargetNineCountsRecord, Long> COUNT = createField("count", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * Create a <code>public.target_nine_counts</code> table reference
     */
    public TargetNineCounts() {
        this(DSL.name("target_nine_counts"), null);
    }

    /**
     * Create an aliased <code>public.target_nine_counts</code> table reference
     */
    public TargetNineCounts(String alias) {
        this(DSL.name(alias), TARGET_NINE_COUNTS);
    }

    /**
     * Create an aliased <code>public.target_nine_counts</code> table reference
     */
    public TargetNineCounts(Name alias) {
        this(alias, TARGET_NINE_COUNTS);
    }

    private TargetNineCounts(Name alias, Table<TargetNineCountsRecord> aliased) {
        this(alias, aliased, null);
    }

    private TargetNineCounts(Name alias, Table<TargetNineCountsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TargetNineCounts as(String alias) {
        return new TargetNineCounts(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TargetNineCounts as(Name alias) {
        return new TargetNineCounts(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TargetNineCounts rename(String name) {
        return new TargetNineCounts(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public TargetNineCounts rename(Name name) {
        return new TargetNineCounts(name, null);
    }
}
