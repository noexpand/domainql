/*
 * This file is generated by jOOQ.
 */
package de.quinscape.domainql.testdomain.tables.records;


import de.quinscape.domainql.testdomain.tables.SourceFour;

import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.Id;
import jakarta.persistence.Table;
import jakarta.validation.constraints.NotNull;
import jakarta.validation.constraints.Size;

import javax.annotation.processing.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.17.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Entity
@Table(
    name = "source_four",
    schema = "public"
)
public class SourceFourRecord extends UpdatableRecordImpl<SourceFourRecord> implements Record3<String, String, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.source_four.id</code>.
     */
    public void setId(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.source_four.id</code>.
     */
    @Id
    @Column(name = "id", nullable = false, length = 36)
    @NotNull
    @Size(max = 36)
    public String getId() {
        return (String) get(0);
    }

    /**
     * Setter for <code>public.source_four.target_id</code>.
     */
    public void setTargetId(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.source_four.target_id</code>.
     */
    @Column(name = "target_id", nullable = false, length = 36)
    @NotNull
    @Size(max = 36)
    public String getTargetId() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.source_four.target2_id</code>.
     */
    public void setTarget2Id(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.source_four.target2_id</code>.
     */
    @Column(name = "target2_id", nullable = false, length = 36)
    @NotNull
    @Size(max = 36)
    public String getTarget2Id() {
        return (String) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row3<String, String, String> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    @Override
    public Row3<String, String, String> valuesRow() {
        return (Row3) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return SourceFour.SOURCE_FOUR.ID;
    }

    @Override
    public Field<String> field2() {
        return SourceFour.SOURCE_FOUR.TARGET_ID;
    }

    @Override
    public Field<String> field3() {
        return SourceFour.SOURCE_FOUR.TARGET2_ID;
    }

    @Override
    public String component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getTargetId();
    }

    @Override
    public String component3() {
        return getTarget2Id();
    }

    @Override
    public String value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getTargetId();
    }

    @Override
    public String value3() {
        return getTarget2Id();
    }

    @Override
    public SourceFourRecord value1(String value) {
        setId(value);
        return this;
    }

    @Override
    public SourceFourRecord value2(String value) {
        setTargetId(value);
        return this;
    }

    @Override
    public SourceFourRecord value3(String value) {
        setTarget2Id(value);
        return this;
    }

    @Override
    public SourceFourRecord values(String value1, String value2, String value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached SourceFourRecord
     */
    public SourceFourRecord() {
        super(SourceFour.SOURCE_FOUR);
    }

    /**
     * Create a detached, initialised SourceFourRecord
     */
    public SourceFourRecord(String id, String targetId, String target2Id) {
        super(SourceFour.SOURCE_FOUR);

        setId(id);
        setTargetId(targetId);
        setTarget2Id(target2Id);
    }

    /**
     * Create a detached, initialised SourceFourRecord
     */
    public SourceFourRecord(de.quinscape.domainql.testdomain.tables.pojos.SourceFour value) {
        super(SourceFour.SOURCE_FOUR);

        if (value != null) {
            setId(value.getId());
            setTargetId(value.getTargetId());
            setTarget2Id(value.getTarget2Id());
        }
    }
}
